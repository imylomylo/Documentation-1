(window.webpackJsonp=window.webpackJsonp||[]).push([[149],{333:function(e,t,a){"use strict";a.r(t);var n=a(0),i=Object(n.a)({},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("div",{staticClass:"content"},[e._m(0),e._v(" "),a("p",[e._v("Komodo’s decentralized exchange, BarterDEX, allows people to trade cryptocurrency coins without a counterparty risk. The protocol is open-source and trading is\navailable for any coin that any developers choose to connect to BarterDEX. The parent\nproject, Komodo, freely provides BarterDEX technology through open-source philosophy. Our service fully realizes decentralized order matching, trade clearing, and\nsettlement. The order-matching aspect uses a low-level pubkey-to-pubkey messaging\nprotocol, and the final settlement is executed through an atomic cross-chain protocol.\nLike any exchange, our decentralized alternative requires liquidity, and we provide\nmethods and incentives therein.")]),e._v(" "),e._m(1),e._v(" "),a("p",[e._v("The current, most practical method for cryptocurrency exchange requires the use of\ncentralized exchange services. Such centralized solutions require vouchers to perform\nthe exchange. Among many dangers present in this system, end-users are under\nthe constant risk of their assets being stolen either by an inside theft or an outside\nhack. Furthermore, the operators of centralized exchanges an exhibit bias in how\nthey facilitate trading among their users. They can also create fake levels of volume\non their exchange. To eliminate such dangers and limitations requires the creation of\na decentralized-exchange alternative.")]),e._v(" "),a("p",[e._v("Among all the centralized exchanges, trading tends to coalesce around a few of the\nmost popular. There is a reason for this behavior. Trading via vouchers is fast; a central\nexchange can swap internal vouchers instantaneously, whereas trading actual cryptocurrencies through human-to-human coordination requires communication from\nboth parties. It requires waiting for blockchain miners to calculate transaction confirmations.")]),e._v(" "),a("p",[e._v("The speed advantage of a centralized exchange, therefore, creates a compounding\neffect on the centralization of traders. The faster processing time of vouchers attracts\nmore people: the increased presence of traders creates higher liquidity: with more\nliquidity, the exchange can feature better prices: the higher quality of prices in turn\nattracts a larger community, and the cycle repeats. This is a classic Network Effect,\nand it is the reason that a few centralized exchanges dominate with high-volume trading, while smaller exchanges—both centralized and decentralized—suffer from a\nlack of liquidity.")]),e._v(" "),e._m(2),e._v(" "),a("p",[e._v("In 2014 a project called The MultiGateway created one of the first decentralized resources for trading cryptocurrencies. The MultiGateway relied on a separate, though\nrelated, blockchain project called the NXT Asset Exchange. The latter facilitated the\ndecentralized exchange of blockchain coins by using proxy tokens (as opposed to\nvouchers), and these proxy tokens represented external cryptocurrencies (such as Bitcoin).")]),e._v(" "),a("p",[e._v('The underlying technology of this solution is still in use by many blockchain platforms, but the proxy- token protocol is too limited to compete with centralized exchanges. Because trading by the means of proxy tokens requires trading on an actual\nblockchain, the trading process loses the speed of a centralized exchange. Also, a\nproxy-token decentralized exchange must still have a storage center to hold the external cryptocurrencies represented by the proxy tokens. At best, this storage center is\nonly distributed, and therefore end-users are under the same counterparty risk that\nexists in centralized exchanges. Furthermore, the process of trading on proxy-token\nplatforms requires using a set ofgateways (i.e. "The MultiGateway") to convert external native coins (such as Bitcoin) to and from the affiliated proxy tokens. Together,\nthese many problems make the proxy-token method of decentralized trading an impractical solution.')]),e._v(" "),a("p",[e._v("Therefore, a decentralized exchange alternative that seeks to successfully remove\nthe threats and limitations of centralized exchanges must feature the same speed,\nliquidity, and convenience of a centralized exchange. As of today, no decentralized\nexchange has successfully replaced any of their centralized counterparts.")]),e._v(" "),e._m(3),e._v(" "),a("p",[e._v("We now present a fully functional, new decentralized technology that makes a\ncompetitive decentralized exchange possible. We call our technology BarterDEX, and\nit allows people to freely and safely exchange cryptocurrency coins from one person\nto another.")]),e._v(" "),a("p",[e._v("The BarterDEX decentralized exchange creates a competitive method for bartering\ncryptocurrencies, combining three key components: order matching, trade clearing,\nand liquidity provision. These components are combined into a single integrated\nsystem that allows users to make a request to trade their coins, find a suitable trading\npartner, and complete the trade using an atomic cross-chain protocol. Additionally,\nBarterDEX provides a layer of privacy during the order-matching process, enabling\ntwo nodes to perform a peer-to-peer atomic swap without any direct IP contact.")]),e._v(" "),a("p",[e._v('The "order matching" component is the process of pairing an end-user’s offer to\nbuy with another end- user’s offer to sell. This component is not the actual trade\nitself, but is only a digitally created promise between end-users stating that they will\nperform their parts of the trade.')]),e._v(" "),a("p",[e._v("The order-matching process is achieved by algorithms that define how the orders\nare paired, and in which order they are fulfilled.")]),e._v(" "),a("p",[e._v('After a successful order-matching execution, the next component is the "clearing"\naspect of the trade, wherein end-users must fulfill their promises. This is the process\nwherein the assets are swapped between the trading parties. BarterDEX facilitates\nthis process and assures the safety of the users therein.')]),e._v(" "),a("p",[e._v("Recall that in previous decentralized exchanges there lies a problem when an\nexchange has low liquidity. BarterDEX solves this problem by creating Liquidity\nProvider Nodes (LP nodes). LP’s are trading parties that act as market-makers, buying and selling assets. They provide liquidity to the exchange, and make their profit\nfrom the spread between bid and ask orders. LP’s bring price stability to the market,\nand facilitate end-users in making fast and efficient trades.")]),e._v(" "),e._m(4),e._v(" "),a("p",[e._v("BarterDEX is the result of years of development and iterated versions, with each\niteration adding the next layer of required functionality to achieve our eventual goal\nof large-scale adoption.")]),e._v(" "),a("p",[e._v("BarterDEX holds support for "),a("a",{attrs:{href:"https://en.bitcoin.it/wiki/Electrum",target:"_blank",rel:"noopener noreferrer"}},[e._v("SPV Electrum-based"),a("OutboundLink")],1),e._v(" coins (removing the need to\ndownload a coin’s blockchain), all Bitcoin-protocol based coins running native-coin\ndaemons, Ethereum, and Ethereum- based ERC20 tokens. The BarterDEX API is built\nto handle the nature of the SPV requirements, providing additional functionality to\ndevelopers.")]),e._v(" "),a("p",[e._v('BarterDEX also enables a feature known as Liquidity Multiplication, a protocol that\nallows the same funds to be used in multiple requests on BarterDEX "orderbooks."\nThe first request to fill completes the trade, and all outstanding requests are immediately cancelled. This feature is available to the user when providing liquidity to the\nexchange (called a "Bob-side" trade); it is not necessary to establish a full LP node to\nengage in Liquidity Multiplication.')]),e._v(" "),a("p",[e._v("Liquidity Multiplication therefore allows an initial amount of funding to create an\nexponentially higher amount of liquidity on the exchange. This also provides a special\nadvantage for traders that like to wait for below-market dumps. While this feature\nis something that any other exchange could implement, few do. On BarterDEX, all\norderbook entries are 100% backed by real funds, as opposed to a centralized exchange’s vouchers, which are not as reliable and therefore would present yet another\ndanger for their end-users.")]),e._v(" "),e._m(5),e._v(" "),a("p",[e._v("Before we get into details regarding the nature of atomic swaps, there are several\naspects of BarterDEX that are critical to understand.")]),e._v(" "),e._m(6),e._v(" "),a("p",[e._v("The first is the decentralized orderbook. The orderbook is the collection of bids\nand offers that end- users place on the network. To create our orderbook, BarterDEX\ncreates a custom peer-to-peer network that employs two separate types of nodes: a\nfull-relay node and a non-relay node.")]),e._v(" "),e._m(7),e._v(" "),a("p",[e._v("The difference between a full-relay node and a non-relay node is that the former is\ntypically a high- volume trader who provides liquidity to the network in exchange\nfor being a trading hub on the network. This puts him in the position of being able to\ncomplete trades more quickly than his trading competitors. The latter type of node\n(non-relay) is the more common user, who engages with BarterDEX when trading\none cryptocurrency for another, given the user’s daily motivations.")]),e._v(" "),a("p",[e._v("There are no requirements or payments necessary to become either type of node,\nand so anyone desiring to become a high-volume full-relay node will find no restrictions. To be successful as a full-relay node, however, one must be able to carry out\ntransactions on the network with a competitive Internet connection and high-capacity\nbandwidth.")]),e._v(" "),a("p",[e._v("There are several incentives encouraging users to become full-relay nodes, as these\ntypes of nodes are necessary to build the backbone of the BarterDEX network. One\nincentive to run a full-relay node is that by being at the center of a wide network of\nnon-relay nodes, the full-relay node has better connectivity and thus a higher chance\nof being the first to complete a trade.")]),e._v(" "),a("p",[e._v("A non-relay node has all the same available trading options—including the option\nto be liquidity providers, and thus use liquidity multiplication. Non-relay nodes are\nonly limited, naturally, in terms of the total number of connections they maintain to\nother users. We expect that most nodes joining the network will be non-relay nodes.")]),e._v(" "),a("p",[e._v("In theory, roughly 100 full-relay nodes should be able to support thousands (if\nnot tens of thousands) of non-relay nodes, thus providing a large and high-volume\nnetwork. We are in the process of achievingreal-world implementation. As of the\nwriting of this white paper, the public Komodo community has performed almost\n100,000 atomic-swap trades on BarterDEX.")]),e._v(" "),a("p",[e._v("When limitations do arise in the scaling process, we have various contingencies\nin place, one of which is the creation of clusters. It is possible to create clusters of\nBarterDEX nodes that are separate from other clusters on the network. To achieve this, when one cluster approaches a level of user load that is overcapacity, users can\nopt to seed a new cluster by creating an independent set of seed nodes. This feature\namplifies the scalability of the BarterDEX network, as it allows clusters of users to\nform in accordance with user desires. We assume that at large scales there will be\nsufficient inventory in the orderbooks for clusters to provide ample asset liquidity,\nespecially if the act of partitioning into a new cluster is based on trading a coin that\nis overcrowded.")]),e._v(" "),a("p",[e._v("Furthermore, as we continue to develop this new technology, we may also create a\nprotocol that will allow these separate clusters to share their order boards via bridge\nnodes, which in theory can act to cross-pollinate desired orders from one cluster to\nanother.")]),e._v(" "),a("p",[e._v("To optimize the network load, we minimize the hierarchical transmission of the\norderbooks and the fetching of data. There are also several different methods of obtaining data by which we can maximize the number of nodes that can fully connect\nto the BarterDEX network.")]),e._v(" "),e._m(8),e._v(" "),a("p",[e._v("While BarterDEX does not require non-relaying nodes to publicly share their IP\naddresses, it is important to note that BarterDEX itself is not private. Instead, we use\nJumblr, an accompanying Komodo technology, to provide privacy options.")]),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),a("p",[e._v("BarterDEX itself is a fork of one our earliest codebase experiments, Iguana Core,\nwhich we briefly encounter in each part of this paper. All BarterDEX transactions\nthat use the atomic-swap protocol are created and signed in a format that is managed\nby the Iguana Core codebase. This enables a powerful combination of features.")]),e._v(" "),a("p",[e._v("The following page is a high-level discussion of one method that Iguana Core supports the fluidity of the Komodo ecosystem. Newcomers to the cryptocurrency industry and those who are not familiar with developer language may find this section too\nchallenging to understand. We welcome the reader to simply read the two warnings\nbelow, and then to skip to the next section.")]),e._v(" "),e._m(11),e._v(" "),a("p",[e._v("One specific feature is a specialty wallet that can manage and trade among a multiplicity of different blockchain coins. To explain the significance of this multi-coin\nwallet feature, let us observe how a standalone GUI app formerly interacted with\ncryptocurrencies.")]),e._v(" "),a("p",[e._v("Previously, for a GUI software application to manage cryptocurrencies, the soft-\nware application usually required the creation of a wallet.dat file, which is locally\nstored on the user’s computer. This wallet.dat file held the privkeys—passwords that\nunlock funds on a blockchain—and other encryption-enabled protocols necessary for\nthe user to manage funds. There are many limitations in the wallet.dat method. For\ninstance, typically only one software application should access the wallet.dat file at a\ntime, to prevent data conflict and corruption.")]),e._v(" "),a("p",[e._v('The Iguana Core codebase enables the user to interact with their funds on the\nblockchain(s) without requiring a wallet.dat file. Because the Iguana Core codebase\nworks with raw transaction data, the codebase allows a user to first create and then\nmanage a public blockchain "smart address" that can be accessed from anywhere, by\nany compatible standalone GUI, simply with a passphrase that unlocks their privkey.')]),e._v(" "),e._m(12),e._v(" "),a("p",[e._v("Furthermore, the smart address created by Iguana Core can manage and maintain\nmultiple types of coins and other blockchain assets. When a user activates any com-\npatible coin using the Iguana-Core passphrase, Iguana Core can store these coins in\na separate address that is compatible with the appropriate blockchain and link this\nsub-address to the other addresses unlocked by the Iguana-Core passphrase.")]),e._v(" "),a("p",[e._v("Therefore, in the underlying Iguana code, each of the unique coins gets an address\nthat is compatible with its own blockchain, but the Iguana-Core passphrase enables\nthe user to access these coins all at once. Therefore, a BarterDEX GUI app can use\nthis passphrase to enable users to actively trade between a multiplicity of coins.")]),e._v(" "),e._m(13),e._v(" "),a("p",[e._v("This also allows standalone GUI applications that are Iguana-Core compatible\nto support each other. For instance, while a BarterDEX GUI can function without\nany native-coin daemon process running in the background simply by relying on\nIguana Core and public Electrum SPV servers (which remove the need to download\nblockchain data), the BarterDEX GUI can also work with a native wallet’s coin daemon background process to coordinate blockchain synchronization.")]),e._v(" "),a("p",[e._v("For instance, a Komodo user may run the Komodo Agama wallet, which runs a\nnative Komodo coin daemon (and has a local wallet.dat file), alongside a BarterDEX\nGUI app. Iguana Core can then enable the BarterDEX GUI to rely on the native coin\ndaemon running in the background of the Komodo Agama wallet, which speeds up\nthe trading process for an end-user, as they do not have to wait for the public Electrum\nservers to update. The native Komodo coin daemon is the software we encountered\nin "),a("router-link",{attrs:{to:"./chapter5.html"}},[e._v("Part II")]),e._v(", "),a("code",[e._v("komodod")]),e._v(".")],1),e._v(" "),e._m(14),e._v(" "),a("p",[e._v('BarterDEX relies heavily on a rarely understood technology called the "UTXO,"\nshort for Unspent Transaction, which was invented in the original Bitcoin protocol.\nThis technology is fundamental to the operations of any blockchain project that utilizes the original Bitcoin protocol. However, even the most active of cryptocurrency\nusers rarely know what UTXOs are or why they exist.')]),e._v(" "),a("p",[e._v("Because UTXOs play an important part in BarterDEX, and to provide a pleasant\nuser experience, it is essential we adequately explain the UTXO concept. In the future, as the technology surrounding BarterDEX iterates, and as the cryptocurrency\ncommunity continues to learn, we hope that the concept of UTXOs will be less taxing\non a user’s learning curve.")]),e._v(" "),a("p",[e._v('To begin our explanation of UTXOs, let us first examine the language of a common\nuser when describing how much cryptocurrency money they have and how they\nperceive those funds. We will therefore need to understand the concept of "satoshis,"\nthe way a blockchain handles the collection and distribution of funds, and how we\nutilize these core technologies when trading on BarterDEX.')]),e._v(" "),e._m(15),e._v(" "),a("p",[e._v('Let us assume a cryptocurrency user, whom we name Charlie, has $10,000 in his\nphysical wallet. Naturally, when Charlie thinks about the amount of physical (or\n"fiat") money he has, he says to himself, "I have $10,000."')]),e._v(" "),a("p",[e._v("However, there is no such thing as a $10,000-dollar bill. Instead, Charlie actually\nhas a collection of smaller bills stacked together. For instance, he could have a stack\nof $100-dollar bills, the total of which equals $10,000 dollars.")]),e._v(" "),a("p",[e._v("If Charlie goes to purchase an item that costs $1, and he only has $100-dollar bills\nin his wallet, to make his purchase he will take out a single $100-dollar bill and give\nit to the cashier. The cashier then breaks that $100-dollar bill down into a series of\nsmaller bills. The cost for the item, $1, remains with the cashier, and the cashier then\nprovides change—perhaps in the form of one $50-dollar bill, two $20- dollar bills, one\n$5-dollar bill, and four $1-dollar bills.")]),e._v(" "),a("p",[e._v('Charlie now thinks to himself, "I have $9,999." Specifically, however, he has ninety-\nnine $100-dollar bills, a $50-dollar bill, two $20-dollar bills, one $5-dollar bill, and\nfour $1-dollar bills.')]),e._v(" "),a("p",[e._v('We emphasize that not only does he not have ten thousand $1-dollar bills, he also\ndoes not have one million pennies ($0.01). Furthermore, because pennies are the small-\nest divisible unit of value in Charlie’s wallet, we could point out that each bill is a\ncollection of its respective units of pennies. For instance, a $1-dollar bill in Charlie’s\nwallet we could describe as, "a bill that represents a collection of one hundred pennies\nand their value."')]),e._v(" "),e._m(16),e._v(" "),e._m(17),e._v(" "),a("p",[e._v('Continuing with our explanation of UTXOs, we next need to understand the concept of "satoshis." The name "satoshi" is derived in honor of Satoshi Nakamoto, author\nof the original Bitcoin white paper. By convention in the cryptocurrency community,\none satoshi is equal to one unit of a coin at the smallest divisible level. For instance,\n1 satoshi of Bitcoin is equal to 0.00000001 BTC.')]),e._v(" "),a("p",[e._v('Let us suppose now that Charlie has 9.99000999 BTC (Bitcoin) in his digital wallet.\nAssuming Charlie correctly understands the concept of satoshis, Charlie could say to\nhimself, "I have nine hundred and ninety-nine million, nine hundred and ninety-nine\nsatoshis of bitcoin."')]),e._v(" "),a("p",[e._v("This is how Charlie might mentally perceive the collection of money that exists in\nhis digital wallet, like he perceives the $9,999 in his fiat wallet.")]),e._v(" "),e._m(18),e._v(" "),a("p",[e._v("Recall now that with fiat money, Charlie did not think about how his original\n$10,000 was comprised of smaller individual $100-dollar bills. Similarly, Charlie also\ndoes not think about how his 9.99000999 BTC could be comprised of smaller collections of satoshis.")]),e._v(" "),a("p",[e._v('Furthermore, just as Charlie did not carry around fiat money as a collection of pennies, he also is not carrying around a raft of satoshis. Were he to try to carry a million\npennies in his physical wallet, the weight of the wallet would be unmanageable. Similarly, if the Bitcoin protocol were to attempt to manage nine hundred and ninety-nine\nmillion, nine-hundred and ninety-nine satoshis, the "data weight" would be so heavy,\nthe Bitcoin protocol would be enormous and unmanageable.')]),e._v(" "),a("p",[e._v('To optimize "data weight," the Bitcoin protocol therefore bundles up the satoshis\ninto something that is like the example of dollar bills earlier, but with one important\ndifference. In fact, here is where the Bitcoin protocol exercises a superiority over\nfiat money by deviating from the limitations fiat money must obey when bundling\nsmaller values into larger values.')]),e._v(" "),a("p",[e._v("In fiat money, one hundred pennies are bundled into a one-dollar bill, which can\nthen be bundled into a larger bill, and so on. All the sizes of fiat money are preset and\npredetermined by the issuer of the fiat money when they print their bills and coins.")]),e._v(" "),a("p",[e._v('The Bitcoin protocol, however, does not need to pre-plan the sizes of "bills" (i.e. the\ncollections of satoshis) in the owner’s wallet. Bitcoin is freer in this sense; it can shift\nand change the sizes of its "bills" at will because there is no need to accommodate for\nthe printing of physical coins and paper.')]),e._v(" "),a("p",[e._v('Instead, the Bitcoin protocol allows for the developer of digital wallets to write\ncode that can optimize how bitcoin satoshis are packaged into "bills," and thus the\ncommunity of developers can work together to keep the data weight of the blockchain\nmanageable. The better the digital-wallet developer, the more efficient the size of the\n"bills" (a.k.a. the packets of satoshis).')]),e._v(" "),a("p",[e._v('The Bitcoin protocol does have one limitation, however: It must keep track of how\nthese satoshis are being collected into larger "bills" in everyone’s digital wallets. After\nall, the very idea of Bitcoin stands in the idea that everything happens under the\npublic eye, where it can be verified. Because the Bitcoin blockchain must keep track\nof the sizes of these packets of satoshis, the only time the packets can be assembled\nor disassembled into larger and smaller sizes is at the moment when the user is\nspending money on the public blockchain. It is at this time that the user is under the\npublic eye, and therefore his actions can be verified.')]),e._v(" "),a("p",[e._v("To compare this limitation to fiat money, consider the effect created were Charlie\nto cut a $100-dollar bill into smaller pieces. The $100-dollar bill would no longer be\nrespected as a valid form of currency.")]),e._v(" "),a("p",[e._v('As the word, "UTXO," is not a sonorous word, some users in the Komodo ecosystem\nsimply refer to UTXOs as "bills." The concept is effectively the same. However, as the\nrest of the blockchain industry primarily uses the word "UTXO," we frequently must use this word to maintain a common line of communication. The word UTXO will be\nused throughout the rest of this white paper, to keep in line with industry practices.')]),e._v(" "),a("p",[e._v("The UTXO packet can be any size, and the developer of the GUI software decides\non this process. Most importantly, and to reiterate, a UTXO can only be resized during\nthe process of spending, as this is the moment when the user interacts with the public\nblockchain.")]),e._v(" "),a("p",[e._v("To further clarify this, let us return to Charlie’s example with fiat money. Recall\nthat when Charlie went to purchase a $1-dollar item, he only had $100-dollar bills in\nhis wallet. He had to give out one $100- dollar bill, and then receive a broken-down\ncollection of dollar bills in return.")]),e._v(" "),a("p",[e._v("This is exactly how it works with UTXOs. Charlie has a collection of UTXOs in\nhis digital wallet. When he goes to buy something, he will give out UTXOs until he\nsurpasses how much he owes, and then the extra change from the last UTXO used\nwill be broken down and returned to him.")]),e._v(" "),a("p",[e._v("For example, let us suppose that Charlie’s 9.99000999 BTC is comprised of three\nUTXOs worth the following values:")]),e._v(" "),e._m(19),e._v(" "),a("p",[e._v("Charlie now desires to purchase an item that costs 0.60000000 BTC. He will have to\nhand out enough UTXOs from his wallet until he covers the costs of this transaction,\njust as he would if he were using fiat money. The Bitcoin protocol calculates the\nchange from the transaction and then returns his change to him.")]),e._v(" "),a("p",[e._v("Remember that there is a fee when spending money on a blockchain. Since we are\nusing Bitcoin in this example, the fee would be paid to cryptocurrency miners. Let us\nimagine that the fee the miners charge Charlie is 999 satoshis.")]),e._v(" "),a("p",[e._v("We begin by looking at how Charlie would see the process of making the purchase,\nassuming he does not understand the concept of UTXOs. For now, Charlie only understands how much is in his wallet at the satoshi level as he conducts his transaction:")]),e._v(" "),e._m(20),e._v(" "),a("p",[e._v("This deduction for his purchase all appears very simple to Charlie—a testament to\nthe Bitcoin protocol’s effective design.")]),e._v(" "),a("p",[e._v("In the background, however, the digital wallet handles the UTXOs and the change\nprocess in a manner as determined by the programmer. In Charlie’s example, let us\nassume that it proceeds this way:")]),e._v(" "),e._m(21),e._v(" "),a("p",[e._v("The wallet now brings out UTXO #2, which is worth 0.49000999 BTC:\nThis UTXO is broken down or shattered into smaller pieces.")]),e._v(" "),e._m(22),e._v(" "),a("p",[e._v("Charlie now has one new UTXO in his wallet, and it is worth 0.39000000 BTC:")]),e._v(" "),e._m(23),e._v(" "),a("p",[e._v("If Charlie wants to buy something later, these UTXOs will have to be broken up once\nmore, according to the costs and programming of the digital wallet. Again, whatever\nis left over from his last UTXO comes back to his own wallet as a new UTXO.")]),e._v(" "),a("p",[e._v("Now let us suppose that Charlie receives 0.4 BTC from someone else. In Charlie’s\nwallet, he will see a total of 9.79 BTC. However, in his wallet there are now actually\nthree UTXOs:")]),e._v(" "),e._m(24),e._v(" "),a("p",[e._v("As a result, the number and sizes of UTXOs in Charlie’s wallet will vary over time. He\nmay have many smaller UTXOs that make up his full balance, or sometimes he might\njust have one large UTXO that comprises all of it. For Charlie, it is normally possible\nto ignore this since the wallet developer could handle everything automatically.")]),e._v(" "),a("p",[e._v("However, understanding the nature of BarterDEX currently encourages users to\nunderstand UTXOs, as the process relies on their UTXO inventory during trading, as\nexplained below.")]),e._v(" "),e._m(25),e._v(" "),a("p",[e._v("From our point of view as developers, the most difficult aspect of creating BarterDEX was in matching the inventory of UTXOs between trading partners.")]),e._v(" "),a("p",[e._v("To illustrate this complexity, let us briefly return to the example of Charlie and\nfiat currency. Let us suppose that Charlie has only a $50-dollar bill in his wallet and\nwants to spend $35 dollars at a videoarcade. He needs to trade $35 for the equivalent number of video-game tokens. However, he can only work with the bill that is in his\nwallet to trade for the tokens.")]),e._v(" "),a("p",[e._v("In a typical arcade, this process is simple. There are just two currencies—his dollars\nand the video game tokens—and he will have a human cashier available to manage\nthe trade. He gives the $50-dollar bill to the human cashier, and the cashier returns\n$15 dollars in dollar bills, and $35 dollars’ worth of video-game tokens.")]),e._v(" "),a("p",[e._v('In creating BarterDEX, however, our goal is to decentralize all points of control.\n(The "cashier," in this sense, is a centralized authority who could be corrupted or\ncould commit human error). That means that we cannot have a human cashier present\nin BarterDEX to trade Charlie’s three UTXOs into their appropriate sizes when he\nwants to swap for other currencies.')]),e._v(" "),a("p",[e._v("A further challenge lies in the number of currencies. For BarterDEX there are not\njust two coins, but many coins, with myriad users, each having a variety of unique\nUTXO sizes in their wallets. In addition, the trading happens in real-time, through\nautomation, on a decentralized peer-to-peer network, supporting a countless number\nof separate blockchain projects, while providing a speed and (eventually) liquidity\ncomparable to that of a centralized exchange. All of this must be accomplished while\nmaintaining a level of security and safety that only decentralization can provide.")]),e._v(" "),a("p",[e._v("Finally, imagine if there were no cashier to break down Charlie’s $50-dollar bill.\nWhat if instead, he had to approach other arcade customers to barter for their tokens?\nThis would create a difficult scenario for Charlie.")]),e._v(" "),a("p",[e._v("In its current iteration (continuing the use of the $50-dollar metaphor as applied\nto UTXOs), we limit BarterDEX’s capability to only perform a trade for Charlie’s\n$50-dollar bill in exchange for the currency that another customer holds. BarterDEX\ndoes not provide a service whereby Charlie can break down his $50-dollar bill into a\nconvenient set of $10-dollar and $5-dollar bills for trading. He must give up his full\n$50-dollar bill for whatever he wants in return.")]),e._v(" "),a("p",[e._v("The process of breaking down UTXO inventory, therefore, is both in the hands of\nthe user and in those of the developers creating the standalone GUI apps. We are\nworking with our community to simplify this process. Naturally, it is complex and\nwill take time. Therefore, we recommend that users who engage with BarterDEX have\na basic understanding of their UTXO inventory and how they are bartering with other\nusers before using it.")]),e._v(" "),e._m(26),e._v(" "),a("p",[e._v("When a BarterDEX user offers a trade to the network, the BarterDEX protocol itself\ndoes not prioritize the total number of satoshis that the user offers. Instead, BarterDEX simply looks through the user’s inventory for the largest-sized UTXO that is\nbelow the amount the user offered.")]),e._v(" "),a("p",[e._v("For example, let us suppose that Charlie has 100.01287001 KMD (Komodo coin) in\nhis wallet. It is comprised of three UTXOs:")]),e._v(" "),e._m(27),e._v(" "),a("p",[e._v("Charlie wants to trade 50.00 KMD on the BarterDEX network. He puts out an order\nfor an alternate cryptocurrency called DOGE (Doge Coin), and he wants to exchange\nin a 1:1 ratio.")]),e._v(" "),a("p",[e._v("BarterDEX itself will not attempt to manage for Charlie’s misunderstanding of his\nUTXO inventory. (The developer of Charlie’s standalone software could try to help\nhim, but that is a separate matter.) Rather, BarterDEX will simply look through his\ninventory for the largest UTXO that is below the total amount he offered. In this\nexample, BarterDEX will select his UTXO #3, worth 10 KMD. BarterDEX will then\ncalculate the necessary fee, which so happens to be exactly equal to the amount of\nUTXO #2: 0.01287001 KMD.")]),e._v(" "),a("p",[e._v("BarterDEX can then take these two UTXOs and facilitate a trade for DOGE in a 1:1\nprice ratio. Charlie’s final wallet appears as so:")]),e._v(" "),e._m(28),e._v(" "),a("p",[e._v("It is up to Charlie, or to the creators of any standalone GUI wallet, to manage the\nUTXOs. BarterDEX only manages the matching of the UTXOs once they are created.")]),e._v(" "),e._m(29),e._v(" "),a("p",[e._v("With an understanding of the specifics of what BarterDEX is actually trading, we\ncan now approach an explanation of how the trading procedure occurs.")]),e._v(" "),e._m(30),e._v(" "),a("p",[e._v('To facilitate trading among users, BarterDEX implements a variation of the atomic-swap protocol, as described by Tier Nolan on BitcoinTalk.org. The original concept\nprovided by Tier Nolan can be said to be "ahead of its time," as it is both complex\nand relies conceptually on technology that yet does not exist. Therefore, to create\nour variation of the atomic-swap protocol, we adapted for the current technology.\nA thorough study of Nolan’s original exposition can provide a solid background\ninto the tradeoffs that we made as we selected our final version of our atomic-swap\nprotocol.')]),e._v(" "),a("p",[e._v("We emphasize to the reader that the key aspect that we maintained from the original concept is that at each step there are both incentives to proceed to the next step in\nthe proper manner, and disincentives to avoid abandoning the procedure. With this\nstructure in place, regardless of where the protocol stops, each party receives their\nproper reward. If a party attempts to deviate from the proper path, their funding\nis penalized to the point of eliminating any potential rewards a user could gain by\nacting maliciously. These incentives and disincentives create the foundation for the\nrequisite trustless nature of our atomic-swap protocol.")]),e._v(" "),e._m(31),e._v(" "),a("p",[e._v("To understand why the atomic-swap protocol is necessary, it is first important to\nrecall that computer code is executed in linear fashion. Even if we were to assume\nthat both parties in a trade may be honest, on a computer the process of taking\nmoney from each digital wallet and pulling the money into the open must happen\none wallet at a time. Therefore, one person must send out their money first. The\natomic- swap protocol protects that person from vulnerability. Without the atomic\nswap, any malicious party involved (whether it be a full-relay node, trading partner,\nor other external agent) would be able to destroy the fairness of the trade.")]),e._v(" "),a("p",[e._v("There are two parties in an atomic swap: the liquidity provider and the liquidity\nreceiver. Once the process of an atomic swap begins, the behavior of each party’s\npublic trading profile is recorded and added to their reputation on the BarterDEX\nnetwork.")]),e._v(" "),e._m(32),e._v(" "),a("p",[e._v("The second UTXO required of Alice is the actual amount she intends to swap.\nBarterDEX first verifies that she has these funds, but for the moment she retains these funds in the safety of her own digital wallet.")]),e._v(" "),a("p",[e._v('On the other side of the atomic swap, we have the liquidity provider—we call\nthis person, "Bob." Bob sees the request on the network for Alice’s atomic swap and\ndecides to accept the trade. Now his part of the process begins.')]),e._v(" "),a("p",[e._v("To complete the trade, he must also have two UTXOs, but with one important\ndifference: the first UTXO is equal to 112.5% of the amount that Alice requested; the\nsecond UTXO is exactly equal to the amount that Alice intends to swap. In other\nwords, Bob must provide liquidity of 212.5% of the total amount of the currency that\nAlice requests.")]),e._v(" "),e._m(33),e._v(" "),a("p",[e._v("The second UTXO (100%) he retains within the safety of his own wallet for the mo-\nment.Performing a successful connection between Bob and Alice, and verifying their\nrequisite UTXOs, is the most complex and difficult aspect of creating the BarterDEX\nnetwork. Myriad factors are involved in a successful attempt for Bob and Alice to\nconnect: human motivation; the experience level of the users; economics; connection\ntechnology; user hardware setups; normal variations within Internet connections; etc.")]),e._v(" "),a("p",[e._v("We emphasize to users here that the process of performing these actions over a\npeer-to-peer network has almost an artistic element to it. An attempt to successfully\nconnect Bob and Alice can be thought of more like fishing, where we must simply cast\nand recast our line until we successfully connect with our target. If a user attempts\na trade and no response returns from the network, the user should slightly adjust\nthe parameters of their offer and try again. As BarterDEX continues to iterate and\nimprove, and as the number of users increases, we expect any required effort to\nlessen for users, the network, and the BarterDEX GUI apps.")]),e._v(" "),e._m(34),e._v(" "),a("p",[e._v("Assuming Alice and Bob are successfully connected, the process from this point\nforward becomes quite simple:")]),e._v(" "),e._m(35),e._v(" "),a("p",[e._v("A summary of the procedure:")]),e._v(" "),e._m(36),e._v(" "),a("p",[e._v('While it may seem inefficient to have seven transactions for a swap that could be done\nwith two, the complexity of this process provides us with the requisite "trustless-ness"\nto maintain user safety.')]),e._v(" "),e._m(37),e._v(" "),a("p",[e._v('As we will now explain, at every step along the way there are incentives for each\nside to proceed, and there are various financial protections in place should one side\nfail. Also, because payments are sent to these "temporary holding wallets" that exist\nwithin the BarterDEX protocol, the protocol itself can assist in the process of moving\nmoney at the appropriate steps. Let us now examine what is happening at each step.')]),e._v(" "),e._m(38),e._v(" "),e._m(39),e._v(" "),e._m(40),e._v(" "),e._m(41),e._v(" "),e._m(42),e._v(" "),e._m(43),e._v(" "),e._m(44),e._v(" "),e._m(45),e._v(" "),e._m(46),e._v(" "),a("p",[e._v("Everything herein is recorded to the respective users’ BarterDEX trading profiles,\nensuring their reputations are on the line. Recall also that the BarterDEX protocol\nrequires each step to be performed in the proper order, thus ensuring that neither\nparty can take any funds before the users’ appropriate moment.")]),e._v(" "),a("p",[e._v("Thus, at this integral stage of the process, every step of the path is intricately interconnected and maintains various levels of protection.")]),e._v(" "),e._m(47),e._v(" "),e._m(48),e._v(" "),e._m(49),e._v(" "),e._m(50),e._v(" "),e._m(51),e._v(" "),e._m(52),e._v(" "),e._m(53),e._v(" "),e._m(54),e._v(" "),e._m(55),e._v(" "),e._m(56),e._v(" "),e._m(57),e._v(" "),a("p",[e._v("The BarterDEX implements the above series of commands in a cross-platform man-\nner, enabling users to atomic-swap trade with coins of many types, including both native coin daemon’s and those that run on SPV Electrum servers. A swap that is\nnot completed immediately can carry on while the time has not expired within the\nBarterDEX protocol.")]),e._v(" "),a("p",[e._v("Naturally, users must understand that outside forces can disable the process and\nthereby damage one of the users. For instance, an Internet outage for Bob could be\nparticularly dangerous. Therefore, users are advised only to trade manageable sums\nthat they are willing to put at risk, and only with nodes that have reliable reputations.")]),e._v(" "),a("p",[e._v('This atomic-swap protocol, with all its cryptographic validations and intricate key\nexchanges, is less than half of the difficulty Komodo experienced in creating BarterDEX. Relatively speaking, it is "easy" to do an atomic swap in isolation between two\ntest nodes, using UTXOs that are carefully prepared for the test.')]),e._v(" "),a("p",[e._v("It is an entirely different matter to open this up to the public at large, including\nthe enabling of our orderbooks and order-matching features. Due to the peer-to-peer\nnature of The BarterDEX, on a live network it is impossible to guarantee that a user\nthat indicates they would like to begin a swap will receive a successful reply.")]),e._v(" "),a("p",[e._v("For instance, a Bob may see a potential swap that he would like to make, but by\nthe time his attempt to accept the swap crosses the expanse of the Internet, someone\nelse could have already accepted the swap, thus leaving Bob in his original position.\nThere are legion scenarios wherein the initial connection can fail. Once the connection\nis made, however, the rest of the process maintains reliability and user safety.")]),e._v(" "),e._m(58),e._v(" "),a("p",[e._v("Therefore, while we cannot guarantee that BarterDEX will always form a valid\nconnection for each attempt at a trade, we can offer comfort in knowing that the\nusers’ losses in these scenarios are insubstantial.")]),e._v(" "),e._m(59),e._v(" "),a("p",[e._v("The following is a brief explanation of the complex process by which BarterDEX\nestablishes a connection between Alice and Bob.")]),e._v(" "),e._m(60),e._v(" "),a("p",[e._v('This is more complicated than it appears. As we explained earlier, most users do\nnot understand the true nature of how funds operate in a cryptocurrency. Rather,\nmost simply view their balance as a single conglomerate of coins that they can spend\nat the "satoshi level." This misperception is important to correct to understand how\nBarterDEX performs an atomic swap.')]),e._v(" "),a("p",[e._v("Naturally, because users have varying sizes of UTXOs in their wallets, the true\nchallenge in creating BarterDEX was to create a method of maintaining a network\nthat would coordinate each user’s list of UTXOs in their wallets, and to allow them\nto match with other users in trading pairs. In addition, BarterDEX also automatically\ncalculates the appropriate mining and transaction fees for the blockchains involved,\naccording to a speed that maintains an optimized atomic-swap process.")]),e._v(" "),a("p",[e._v("As we created the necessary code to make the atomic swap possible for the public,\nwe found that it is not practical to have the user specify which UTXO pair they have\nsitting in their wallet when choosing to make a swap. This would also not be intuitive\nfor the user. Furthermore, we did not even want to code a way for an Alice to know\nthe UTXOs a Bob has available at the moment of negotiating a trade.")]),e._v(" "),a("p",[e._v("Instead, here is how BarterDEX deals with the complexity of matching these unbroken and mismatching UTXOs to process an atomic swap. It is important to note that\nusers are not required to have a sophisticated understanding of the backend UTXO\nprocess, and may simply trade using either a minimal understanding of UTXO inventories, or at least rely on the support of a cleverly coded standalone BarterDEX GUI\napp.")]),e._v(" "),e._m(61),e._v(" "),e._m(62),e._v(" "),e._m(63),e._v(" "),a("p",[e._v('Once BarterDEX verifies all these conditions, the Bob-side protocol sends back a\ndata packet, labeled "reserved," to the Alice-side protocol to indicate that all is in\norder. All of this is optimized andconducted in a manner that prevents the human\nBob from having his funds frozen in an unnecessary deposit duty, should the human\nAlice find another "Bob" in the interim.')]),e._v(" "),a("p",[e._v('Next, the Alice-side protocol validates the "reserved" packet from the Bob-side protocol, making sure all the UTXOs are valid, and the protocol verifies that the price\nand volumes are acceptable according to the original intent.')]),e._v(" "),a("p",[e._v('Assuming everything successfully validates, the Alice-side protocol sends a "connect" packet back to the Bob-side protocol with the same parameters, indicating that\nher funds are now "reserved" as well.')]),e._v(" "),a("p",[e._v('Between the "request" being sent and the "reserved" packet being received there is\na 10-second timeout which prevents Alice from making further trade requests. This\ngives BarterDEX the time necessary to perform all the calculations.')]),e._v(" "),e._m(64),e._v(" "),a("p",[e._v('The Bob-side protocol now validates Alice’s "connect" packet and, assuming everything is in order, the protocol starts a new Bob-side thread of code, thus beginning\nthe actual atomic swap. The Alice-side protocol also receives the "connect" packet,\nverifies, and then starts an Alice-side thread of code.')]),e._v(" "),a("p",[e._v('There is one more "negotiation" step that is needed between the Alice-side and Bob-side protocols: in the event the two sides to the protocol do not achieve consensus,\nthe entire atomic swap aborts without any payments sent from either party (i.e. "no\nharm, no foul").')]),e._v(" "),e._m(65),e._v(" "),a("p",[e._v("The Alice-side and Bob-side protocols have now properly performed their duties,\nand thus completed the most challenging aspect of the atomic-swap protocol. BarterDEX returns control to the humans (or bots acting on their behalf) to send their respective payments.")]),e._v(" "),e._m(66),e._v(" "),e._m(67),e._v(" "),e._m(68),e._v(" "),a("p",[e._v("Furthermore, they often have fees and limitations for withdrawing funds, as well\nas a lengthy, challenging, or invasive registration processes. BarterDEX has none of\nthese things. Users need only record the passphrase they create when first entering\nthe BarterDEX software, and they are prepared to trade.")]),e._v(" "),e._m(69),e._v(" "),e._m(70),e._v(" "),e._m(71),e._v(" "),e._m(72),e._v(" "),e._m(73),e._v(" "),a("p",[e._v("Since BarterDEX is trading permanently on blockchains (as opposed to updating an internal database of vouchers, or managing a proxy-token account balance),\nboth sides of the trading pair need to wait and watch as miners on the respective\nblockchains calculate transaction confirmations.")]),e._v(" "),a("p",[e._v("Because the payments that occur on one blockchain will proceed regardless of the\nactions on the other blockchain (i.e. a confirmation failure on one chain will not stop\nwith the other blockchain performing its duties as normal), it is therefore important\nthat the BarterDEX protocol observe and adjust as necessary. Each side of the BarterDEX protocol (Bob-side and Alice-side) watches and attempts to provide a level of\nprotection for the human users.")]),e._v(" "),e._m(74),e._v(" "),e._m(75),e._v(" "),e._m(76),e._v(" "),e._m(77),e._v(" "),e._m(78),e._v(" "),e._m(79),e._v(" "),e._m(80),e._v(" "),a("p",[e._v('Alice places a one-time security deposit of an amount equal to or greater than\nthe amount she would like to actively trade without waiting for confirmations. This\nsecurity deposit is sent to a conditional p2sh wallet address (presently controlled by\nthe Komodo team). Alice indicates within her security-deposit transaction the amount\nof time the deposit should remain in the wallet. The p2sh wallet will lock the funds\nfrom Alice’s end until the completion of the expiration date, though the wallet will\nallow the Komodo team to access the funds if necessary. This is called a "time-locked\ndeposit." After her chosen date of expiration, she can reclaim her security at any time.\nNote that her KMD funds continue to be eligible for earning 5.1% rewards.')]),e._v(" "),a("p",[e._v("This enables Alice to participate in our experimental Speed Mode feature, a fully\nautomated protocol that tracks users’ trading activities and monitors their uncon-\nfirmed swaps against their time-locked deposits. While using Speed Mode, Alice can\ntrade funds of amounts smaller than her time-locked deposit. (The Bob that accepts\nher request must also be willing to engage in the Speed Mode feature.)")]),e._v(" "),a("p",[e._v("Her trading partners dynamically decrease her trust level as she trades, monitoring\nthe amount of her unconfirmed transactions against her total security deposit. Should she reach an unconfirmed trading capacity that is roughly equal to the amount in her\ndeposit, the protocol blocks her from participating in the Speed Mode feature until\nher funds obtain more clearance through notarization on their respective networks.")]),e._v(" "),a("p",[e._v("Should Alice attempt to cheat during any period of zero confirmations, the Komodo team can activate the p2sh wallet security deposit and deduct the amount of her offense, and a penalty fee, from her security deposit to compensate the affected\nparties. The remainder will be available for her to reclaim at the date of the original\nexpiration, at the latest.")]),e._v(" "),e._m(81),e._v(" "),e._m(82),e._v(" "),e._m(83),e._v(" "),e._m(84),e._v(" "),a("p",[e._v('When considering how prices compare between two cryptocurrencies, BarterDEX\nuses the convention of "base/rel," which can be translated as "base currency to rele-\nvant currency." The price is calculated by determining (base currency)/(relevant currency). The relevant currency is the cryptocurrency Alice is using to make the initial\npurchase, and the base is the currency Alice intends to buy.')]),e._v(" "),e._m(85),e._v(" "),e._m(86),e._v(" "),a("p",[e._v("Using the (pubkey)/(price) pairing, all that is needed to populate the orderbook\nskeleton is for nodes to broadcast their pubkey and price for any (base)/(rel) pair.\nNodes that are running a local coin daemon therefore broadcast their lists of UTXOs, which helps to propagate the orderbook. All of this is done in the background, on-demand.")]),e._v(" "),a("p",[e._v("Critical information is broadcast with fully signed encryption to prevent spoofing.\nThus, all nodes can verify the smart address associated with a pubkey. In this way,\nnodes can validate the price broadcasted. (The electrum SPV coins have their own\nspecific SPV-validation process for all UTXOs before they can be approved for trading\non BarterDEX.)")]),e._v(" "),a("p",[e._v("While all nodes could broadcast their UTXO lists constantly to keep them updated,\nthis would result in the network rapidly being overrun with congestion. To eliminate this issue, BarterDEX simply relies on the (pubkey)/(prices) as this is all that is\nnecessary to maintain useful orderbooks.")]),e._v(" "),a("p",[e._v("Since there are N*N possible orderbooks (given N currencies), it is not practical\nto have BarterDEX configured to update all possible orderbooks constantly. Instead,\norderbooks are created on the user end when requested from the raw public data.\nDuring orderbook creation, if the top entries in the orderbook do not possess any\nlistunspent data, a request is made to the network to gather this information.")]),e._v(" "),a("p",[e._v('This process ensures that by the time a trade completes, there is already a request\nfor an orderbook, which in turn requests the listunspent data for the most likely pubkeys. The actual order-matchingprocess then iterates through the orderbook, scanning all the locally known UTXOs to find a high- probability counterparty to whom\nBarterDEX can then propose a "request" offer. In practice, early users on BarterDEX\ncan currently experience nearly instantaneous responses, assuming all the parameters\nare properly met.')]),e._v(" "),e._m(87),e._v(" "),a("p",[e._v('We created an API model that is the same for all coins—with the obvious exceptions\nof the electrum-API call itself, and within some of the returned JSON files that have\ndifferent calls, such as "listunspent."')]),e._v(" "),a("p",[e._v('Furthermore, the underlying technology of BarterDEX enables the API to treat\nall bitcoin-protocol compatible coins with a universal-coin model. Therefore, when\nworking with the BarterDEX API, an independent developer working to feature their\ncoin on BarterDEX need only use the API "coin" symbol to receive the full set of\nBarterDEX features.')]),e._v(" "),e._m(88),e._v(" "),a("p",[e._v("If the coin has the CLTV OP_CODE, it can be both the liquidity provider and\nthe liquidity taker. For coins using SPV, BarterDEX only supports the liquidity-taking\nside (for overall network-performance reasons). Also, we assume that any trader with ambitions of being a serious liquidity provider should also be serious enough to\ninstall the coin daemon for the coins they are trading, as this will increase their speed\nof processing.")]),e._v(" "),e._m(89),e._v(" "),a("p",[e._v("This concludes a high-level summary of the BarterDEX protocol as created by the\nKomodo organization. It is now fully functioning and live, and with the support\nof our community, we have successfully completed roughly one-hundred thousand\natomic swaps.")]),e._v(" "),a("p",[e._v("We should warn our readers, nevertheless. Every element of the Komodo ecosystem\nis still considered to be highly experimental. We provide no investment advice, nor\nany guarantees of any funds utilized on our network. Use our products only at your\nown risk.")]),e._v(" "),a("p",[e._v("Looking past our upcoming immediate dICOs, BarterDEX will continue to evolve.\nThe current iteration has already identified several areas of improvement for the next\niteration. Several different GUI systems are also under construction by various com-\nmunity members, all of which are utilizing the BarterDEX 1.0 API. As we develop\nthe BarterDEX API, we are making sure that future iterations are backwards compatible for developer ease-of-use. Improving the user experience and user interface of a\nleading GUI app is a top priority.")])])},[function(){var e=this.$createElement,t=this._self._c||e;return t("h1",{attrs:{id:"abstract-barterdex"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#abstract-barterdex","aria-hidden":"true"}},[this._v("#")]),this._v(" Abstract (BarterDEX)")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"introduction"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#introduction","aria-hidden":"true"}},[this._v("#")]),this._v(" Introduction")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"the-beginnings-and-travails-of-decentralized-exchanges"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-beginnings-and-travails-of-decentralized-exchanges","aria-hidden":"true"}},[this._v("#")]),this._v(" The Beginnings and Travails of Decentralized Exchanges")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"barterdex-a-complete-solution"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#barterdex-a-complete-solution","aria-hidden":"true"}},[this._v("#")]),this._v(" BarterDEX: A Complete Solution")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"recent-improvements-in-barterdex"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#recent-improvements-in-barterdex","aria-hidden":"true"}},[this._v("#")]),this._v(" Recent Improvements in BarterDEX")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"barterdex-technology"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#barterdex-technology","aria-hidden":"true"}},[this._v("#")]),this._v(" Barterdex Technology")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"order-matching"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#order-matching","aria-hidden":"true"}},[this._v("#")]),this._v(" Order Matching")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"order-matching-with-full-relay-and-non-relay-nodes"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#order-matching-with-full-relay-and-non-relay-nodes","aria-hidden":"true"}},[this._v("#")]),this._v(" Order Matching with Full-Relay and Non-Relay Nodes")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"jumblr-technology-adds-privacy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#jumblr-technology-adds-privacy","aria-hidden":"true"}},[this._v("#")]),this._v(" Jumblr Technology Adds Privacy")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Users should assume that if privacy is important for their given trading activity,\nthey need to employ Komodo’s additional privacy technology, Jumblr. On the surface, non-relaying nodes perform addressing via a "),t("code",[this._v("<curve25519>")]),this._v(" pubkey, and the IP\naddress of one non-relaying node is normally not directly shared with their accompanying non-relaying trading partner. However, full-relay nodes are capable of monitoring IP addresses at the lower levels of the network, and therefore a malicious actor\nwould be able to link IP addresses of non-relay nodes to pubkeys, thus uncovering\nthe most crucial aspects of their privacy.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"iguana-core-provides-the-foundation-for-our-smart-address-feature"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#iguana-core-provides-the-foundation-for-our-smart-address-feature","aria-hidden":"true"}},[this._v("#")]),this._v(' Iguana Core Provides the Foundation for Our "Smart Address" Feature')])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"warning custom-block"},[t("p",{staticClass:"custom-block-title"},[this._v("WARNING")]),this._v(" "),t("ul",[t("li",[this._v("Some of the features that Iguana Core enables are highly advanced, and therefore users interacting with BarterDEX and other Iguana-compatible GUI software applications should always perform proper research and exercise caution.")]),this._v(" "),t("li",[this._v("The important thing for users to understand is that they should be careful not to spend the same funding in two different standalone apps. In other words, if they are trading with funds in a BarterDEX GUI, they should not also try to spend those funds in their Agama Wallet (or another Iguana- compatible wallet). Instead, they should wait for both apps to be in sync before moving forward.")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("To maintain control over their funds without requiring a wallet.dat file, users need\nonly create a smart address and then retain a copy of the accompanying passphrase\n(typically a collection of 12 to 24 common dictionary words arranged in a specific\norder) that is provided at the moment of creation. By entering this passphrase into\nan Iguana Core compatible standalone GUI app, Iguana Core then activates their\n"),t("code",[this._v("<privkey>")]),this._v(", which then enables users to manage their funds.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("One key function of the Iguana codebase that makes this possible is the "),t("code",[this._v("<withdraw>")]),this._v("\ncommand in the Iguana Core API. It is this command that allows individual GUI apps, such as a standalone BarterDEX GUI app, to work with the underlying funds\nin the user’s addresses.\nNotice several of the freedoms this provides to the user. All the funds are only\nspendable by the user with the passphrase. Because there is no need for a wallet.dat\nfile to be stored locally, there is less danger (though users should exercise caution) of\ndata corruption between different standalone software applications that are accessing\nthese funds.\nTherefore, an end-user can have a standalone BarterDEX GUI app running on their\nlocal machine, which they use to trade, and can also have a separate standalone GUI\nwallet app that is managing their long- term cryptocurrency holdings.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"the-utxo-an-elusive-yet-fundamental-concept"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-utxo-an-elusive-yet-fundamental-concept","aria-hidden":"true"}},[this._v("#")]),this._v(" The UTXO: an Elusive, Yet Fundamental Concept")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"comparing-the-utxo-to-fiat-money"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#comparing-the-utxo-to-fiat-money","aria-hidden":"true"}},[this._v("#")]),this._v(" Comparing the UTXO to Fiat Money")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"understanding-cryptocurrencies-and-their-utxos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#understanding-cryptocurrencies-and-their-utxos","aria-hidden":"true"}},[this._v("#")]),this._v(" Understanding Cryptocurrencies and Their UTXOs")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"a-satoshi-is-the-smallest-divisible-unit-of-a-cryptocurrency"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-satoshi-is-the-smallest-divisible-unit-of-a-cryptocurrency","aria-hidden":"true"}},[this._v("#")]),this._v(" A Satoshi is The Smallest Divisible Unit of a Cryptocurrency")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"a-utxo-is-a-packet-of-satoshis-just-as-a-fiat-dollar-bill-is-a-packet-of-pennies"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-utxo-is-a-packet-of-satoshis-just-as-a-fiat-dollar-bill-is-a-packet-of-pennies","aria-hidden":"true"}},[this._v("#")]),this._v(" A UTXO is a Packet of Satoshis, just as a Fiat Dollar Bill is a Packet of Pennies")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("table",[a("thead",[a("tr",[a("th",[e._v("UTXOs in Charlie’s Wallet")]),e._v(" "),a("th",[e._v("Value")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("UTXO #1:")]),e._v(" "),a("td",[e._v("0.50000000 BTC")])]),e._v(" "),a("tr",[a("td",[e._v("UTXO #2:")]),e._v(" "),a("td",[e._v("0.49000999 BTC")])]),e._v(" "),a("tr",[a("td",[e._v("UTXO #3:")]),e._v(" "),a("td",[e._v("9.00000000 BTC")])]),e._v(" "),a("tr",[a("td",[e._v("Total")]),e._v(" "),a("td",[e._v("9.99000999 BTC")])])])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("table",[a("thead",[a("tr",[a("th",[e._v("Value")]),e._v(" "),a("th",[e._v("Description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("9.99000999 BTC")]),e._v(" "),a("td",[e._v("The amount Charlie initially owns")])]),e._v(" "),a("tr",[a("td",[e._v("(-) 0.60000000 BTC")]),e._v(" "),a("td",[e._v("The amount Charlie sends to the digital cashier for his purchase")])]),e._v(" "),a("tr",[a("td",[e._v("(-) 0.00000999 BTC")]),e._v(" "),a("td",[e._v("The network fee paid to miners")])]),e._v(" "),a("tr",[a("td",[e._v("------------------")]),e._v(" "),a("td",[e._v("-----------------------------------------------------------------")])]),e._v(" "),a("tr",[a("td",[e._v("9.39000000 BTC")]),e._v(" "),a("td",[e._v("The amount left in his wallet")])])])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("table",[a("thead",[a("tr",[a("th",[e._v("Value")]),e._v(" "),a("th",[e._v("Description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("0.60000999 BTC")]),e._v(" "),a("td",[e._v("The total amount that Charlie owes to the cashier and network")])]),e._v(" "),a("tr",[a("td",[a("strong",[e._v("(-) 0.50000000 BTC")])]),e._v(" "),a("td",[e._v("The wallet sends the full value of "),a("strong",[e._v("UTXO #1")]),e._v(" to the digital cashier")])]),e._v(" "),a("tr",[a("td",[e._v("------------------------")]),e._v(" "),a("td",[e._v("------------------------------------------------------------------------")])]),e._v(" "),a("tr",[a("td",[e._v("0.10000999 BTC")]),e._v(" "),a("td",[e._v("This is the remaining total amount that Charlie still owes")])])])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("table",[a("thead",[a("tr",[a("th",[e._v("Value")]),e._v(" "),a("th",[e._v("Description")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("0.49000999 BTC")]),e._v(" "),a("td",[e._v("The size of Charlie’s "),a("strong",[e._v("UTXO #2")]),e._v(", now in the process of change")])]),e._v(" "),a("tr",[a("td",[e._v("(-) 0.10000000 BTC")]),e._v(" "),a("td",[e._v("This shatter of "),a("strong",[e._v("UTXO #2")]),e._v(" goes to the cashier (payment fulfilled)")])]),e._v(" "),a("tr",[a("td",[e._v("(-) 0.00000999 BTC")]),e._v(" "),a("td",[e._v("This shatter of "),a("strong",[e._v("UTXO #2")]),e._v(" pays the network fee to the miners")])]),e._v(" "),a("tr",[a("td",[e._v("--------------------")]),e._v(" "),a("td",[e._v("----------------------------------------------------------------------")])]),e._v(" "),a("tr",[a("td",[e._v("0.39000000 BTC")]),e._v(" "),a("td",[e._v("This last shatter now returns to Charlie’s wallet as a new UTXO")])])])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("table",[a("thead",[a("tr",[a("th",[e._v("Charlie’s New Wallet State")]),e._v(" "),a("th",[e._v("Value")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("UTXO #3:")]),e._v(" "),a("td",[e._v("9.00000000 BTC")])]),e._v(" "),a("tr",[a("td",[e._v("UTXO #4:")]),e._v(" "),a("td",[e._v("0.39000000 BTC")])]),e._v(" "),a("tr",[a("td",[e._v("----------------------------")]),e._v(" "),a("td",[e._v("----------------")])]),e._v(" "),a("tr",[a("td",[e._v("Total")]),e._v(" "),a("td",[e._v("9.39000000 BTC")])])])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("table",[a("thead",[a("tr",[a("th",[e._v("Charlie’s New Wallet State")]),e._v(" "),a("th",[e._v("Value")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("UTXO #3:")]),e._v(" "),a("td",[e._v("9.00000000 BTC")])]),e._v(" "),a("tr",[a("td",[e._v("UTXO #4:")]),e._v(" "),a("td",[e._v("0.39000000 BTC")])]),e._v(" "),a("tr",[a("td",[e._v("UTXO #5:")]),e._v(" "),a("td",[e._v("0.4000000 BTC")])]),e._v(" "),a("tr",[a("td",[e._v("Total")]),e._v(" "),a("td",[e._v("9.79000000 BTC")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"trading-on-barterdex"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#trading-on-barterdex","aria-hidden":"true"}},[this._v("#")]),this._v(" Trading on Barterdex")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"how-barterdex-deals-with-order-offers-and-utxos"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#how-barterdex-deals-with-order-offers-and-utxos","aria-hidden":"true"}},[this._v("#")]),this._v(" How BarterDEX Deals with Order Offers and UTXOs")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("table",[a("thead",[a("tr",[a("th",[e._v("Charlie’s Initial Wallet State")]),e._v(" "),a("th",[e._v("Value")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("UTXO #1:")]),e._v(" "),a("td",[e._v("90.00000000 KMD")])]),e._v(" "),a("tr",[a("td",[e._v("UTXO #2:")]),e._v(" "),a("td",[e._v("00.01287001 KMD")])]),e._v(" "),a("tr",[a("td",[e._v("UTXO #3:")]),e._v(" "),a("td",[e._v("10.00000000 KMD")])]),e._v(" "),a("tr",[a("td",[e._v("Total")]),e._v(" "),a("td",[e._v("100.01287001 KMD")])])])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("table",[a("thead",[a("tr",[a("th",[e._v("Charlie’s Final Wallet State")]),e._v(" "),a("th",[e._v("Value")])])]),e._v(" "),a("tbody",[a("tr",[a("td",[e._v("UTXO #1:")]),e._v(" "),a("td",[e._v("90.00000000 KMD")])]),e._v(" "),a("tr",[a("td",[e._v("UTXO #3:")]),e._v(" "),a("td",[e._v("10.00000000 KMD")])]),e._v(" "),a("tr",[a("td",[e._v("Total")]),e._v(" "),a("td",[e._v("90.00000000 KMD + 90.00000000 DOGE")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"detailed-explanations-of-the-barterdex-process"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#detailed-explanations-of-the-barterdex-process","aria-hidden":"true"}},[this._v("#")]),this._v(" Detailed Explanations of the Barterdex Process")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"atomic-swaps-on-the-komodo-barterdex"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#atomic-swaps-on-the-komodo-barterdex","aria-hidden":"true"}},[this._v("#")]),this._v(" Atomic Swaps on The Komodo BarterDEX")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"introducing-alice-and-bob"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#introducing-alice-and-bob","aria-hidden":"true"}},[this._v("#")]),this._v(" Introducing, Alice and Bob")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v('The process of an atomic swap begins with the person who makes the initial request—this is the liquidity receiver. By convention, we call this person, "Alice." Alice\nwill need two UTXOs to perform her swap. One UTXO will cover the protocol fee,\nwhich is roughly 1/777th the size of her desired order. We call this fee the '),t("code",[this._v("<dexfee>")]),this._v(",\nand its primary purpose is to serve as a disincentive to Alice from spamming the\nnetwork with rapid requests.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The first UTXO (112.5%) Bob now sends out as a security deposit, placed on the\nBarterDEX network. The network’s encryption holds the deposit safely in view, but\nuntouchable. We call this UTXO, "),t("code",[this._v("<bobdeposit>")]),this._v(". It will remain there until his side of\nthe bargain completes in full, or until Alice’s request for a swap times out. Assuming\nBob keeps his promises and stays alert, these funds will be automatically returned to\nhim at the appropriate moment.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"alice-and-bob-make-a-deal"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#alice-and-bob-make-a-deal","aria-hidden":"true"}},[this._v("#")]),this._v(" Alice and Bob Make a Deal")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"tip custom-block"},[t("p",{staticClass:"custom-block-title"},[this._v("Note")]),this._v(" "),t("p",[this._v("In some cases, it is possible to perform an atomic swap with fewer steps, but for the sake of brevity we will focus only on this scenario.")])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ol",[a("li",[a("p",[e._v("Alice requests a swap and sends the "),a("code",[e._v("<dexfee>")]),e._v(" to the BarterDEX full-relay nodes.")]),e._v(" "),a("ul",[a("li",[e._v("The full-relay nodes receive her request and publish it to the network")])])]),e._v(" "),a("li",[a("p",[e._v("Bob sees the request on the network, accepts it, and sends out "),a("code",[e._v("<bobdeposit>")])]),e._v(" "),a("ul",[a("li",[a("p",[a("code",[e._v("<bobdeposit>")]),e._v(" enters a state of limbo on the BarterDEX network, held safely by encryption, awaiting either Alice to proceed, or for the swap to time out")])]),e._v(" "),a("li",[a("p",[e._v("If the latter occurs, "),a("code",[e._v("<bobdeposit>")]),e._v(" is automatically refunded to Bob via the BarterDEX protocol")])])])]),e._v(" "),a("li",[a("p",[e._v("Alice now sends her "),a("code",[e._v("<alicepayment>")]),e._v(" to Bob")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("She does not send the payment to Bob directly, but rather into a temporary holding wallet on the BarterDEX exchange, which is encrypted and protected by his private keys")])]),e._v(" "),a("li",[a("p",[e._v("Only Bob has access to this wallet, via the set of privkeys that only he owns")])]),e._v(" "),a("li",[a("p",[e._v("However, the BarterDEX code does not yet allow Bob to unlock this temporary holding wallet; he must continue his end of the bargain first")])]),e._v(" "),a("li",[a("p",[e._v("The "),a("code",[e._v("<alicepayment>")]),e._v(" will remain in Bob’s temporary holding wallet for a limited amount of time, giving him the opportunity to proceed")])])])]),e._v(" "),a("li",[a("p",[e._v("Bob now sends his "),a("code",[e._v("<bobpayment>")]),e._v(" to Alice")]),e._v(" "),a("ul",[a("li",[a("p",[e._v("Again, this is not sent to Alice directly, but rather into yet another temporary holding wallet")])]),e._v(" "),a("li",[a("p",[e._v("Likewise, only Alice has access to the necessary privkeys for this wallet")])]),e._v(" "),a("li",[a("p",[e._v("The "),a("code",[e._v("<bobpayment>")]),e._v(" will automatically be refunded if she does not complete her part of the process")])])])]),e._v(" "),a("li",[a("p",[e._v('Alice now "spends" the '),a("code",[e._v("<bobpayment>")])]),e._v(" "),a("ul",[a("li",[a("p",[e._v('By the word "spends," we simply mean that she activates her privkeys and moves all the funds to another wallet—most likely to her smart address')])]),e._v(" "),a("li",[a("p",[e._v('BarterDEX registers that Alice’s temporary holding wallet successfully "spent" the funds')])])])]),e._v(" "),a("li",[a("p",[e._v('Bob "spends" the '),a("code",[e._v("<alicepayment>")])]),e._v(" "),a("ul",[a("li",[e._v("Likewise, Bob simply moves the entirety of the "),a("code",[e._v("<alicepayment>")]),e._v(" into a wallet of his own—again, it will most typically be his own smart address")]),e._v(" "),a("li",[e._v("BarterDEX now knows that Bob also successfully received his money")])])]),e._v(" "),a("li",[a("p",[e._v("Seeing both temporary holding wallets now empty, the BarterDEX protocol recognizes that the atomic swap was a complete success.")]),e._v(" "),a("ul",[a("li",[e._v("BarterDEX now refunds "),a("code",[e._v("<bobdeposit>")]),e._v(" back to Bob and the process is complete.")])])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"incentives-and-disincentives-to-maintain-good-behavior"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#incentives-and-disincentives-to-maintain-good-behavior","aria-hidden":"true"}},[this._v("#")]),this._v(" Incentives and Disincentives to Maintain Good Behavior")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"_1-alice-sends-dexfee"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-alice-sends-dexfee","aria-hidden":"true"}},[this._v("#")]),this._v(" 1 - Alice Sends "),t("code",[this._v("<dexfee>")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("If Bob accepts the offer to trade, but does not send "),t("code",[this._v("<bobdeposit>")]),this._v(", Alice only stands\nto lose her "),t("code",[this._v("<dexfee>")]),this._v(" UTXO. This is only 1/777th of the entire transaction amount, so\nshe loses very little. Bob, on the other hand, stands to lose more. Since Bob did not\nfollow through with his end of the bargain, the BarterDEX network indicates on his\npublic BarterDEX trading profile that he failed in a commitment, thus decreasing his\nprofile’s reputation. If Bob continues this behavior as a habit, he may find it difficult\nto discover trading partners.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v('So long as the frequency of "Bobs" failing is low, the occasional extra '),t("code",[this._v("<dexfee>")]),this._v(" paid\nby an Alice is a minor issue. However, if there is a sudden spike in misbehavior, the\nBarterDEX code has in-built contingency plans which can provide refunds to Alice(s),\nshould a particular Alice node(s) experience a large loss via "),t("code",[this._v("<dexfee>")]),this._v("s.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"_2-bob-successfully-sends-bobdeposit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-bob-successfully-sends-bobdeposit","aria-hidden":"true"}},[this._v("#")]),this._v(" 2 - Bob Successfully Sends "),t("code",[this._v("<bobdeposit>")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("If Alice does not follow with her next step, the "),t("code",[this._v("<alicepayment>")]),this._v(", then Alice loses\nnot only the "),t("code",[this._v("<dexfee>")]),this._v(", but she also receives a mark on her public BarterDEX profile.\nShe gains nothing, and Bob has no reason to fear as "),t("code",[this._v("<bobdeposit>")]),this._v(" will automatically\nreturn to him via the BarterDEX protocol.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"_3-alice-successfully-sends-alicepayment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-alice-successfully-sends-alicepayment","aria-hidden":"true"}},[this._v("#")]),this._v(" 3 - Alice Successfully Sends "),t("code",[this._v("<alicepayment>")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("If Bob does not proceed with his next step, the "),t("code",[this._v("<bobpayment>")]),this._v(", then after 4 hours\nAlice can simply activate a BarterDEX protocol that will allow her to claim "),t("code",[this._v("<bobdeposit>")]),this._v(". Recall that "),t("code",[this._v("<bobdeposit>")]),this._v(" is 112.5% of the original intended trade; Bob has\nevery incentive therefore to continue with his end of the bargain, and Alice has noth-\ning to fear should Bob fail. She even stands to gain a 12.5% bonus, at Bob’s expense.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"_4-bob-sends-bobpayment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-bob-sends-bobpayment","aria-hidden":"true"}},[this._v("#")]),this._v(" 4 - Bob Sends "),t("code",[this._v("<bobpayment>")])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",[e._v('Now, if Alice does not follow by "spending" the '),a("code",[e._v("<bobpayment>")]),e._v(" (i.e. taking the\nmoney out of the temporary holding wallet and into her own smart address), then\nafter 2 hours Bob can activate a BarterDEX protocol that allows him to reclaim his\n"),a("code",[e._v("<bobpayment>")]),e._v(" immediately. Furthermore, four hours later Bob may activate a refund\nof "),a("code",[e._v("<bobdeposit>")]),e._v("; Bob is safe from Alice, should she fail. For Alice, the BarterDEX protocol allows Alice to reclaim her "),a("code",[e._v("<alicepayment>")]),e._v(" after Bob reclaims both of his\npayments.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"_5-alice-spends-bobpayment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-alice-spends-bobpayment","aria-hidden":"true"}},[this._v("#")]),this._v(" 5 - Alice Spends "),t("code",[this._v("<bobpayment>")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("At this point, Alice is entirely through with any risk to her reputation, her "),t("code",[this._v("<dexfee>")]),this._v("\npayment, or of the loss of her time.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v('If Bob does not follow by also "spending" the '),t("code",[this._v("<alicepayment>")]),this._v(", it is of no concern\nto Alice because she has already received her funds. If Bob is simply sleeping and\nforgets to spend the "),t("code",[this._v("<alicepayment>")]),this._v(", he can only hurt himself.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Naturally, for Bob this is slightly dangerous. Bob’s best course of action is to remain\nalert and spend the "),t("code",[this._v("<alicepayment>")]),this._v(" once it is received.")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",[e._v("If after four hours, Bob is still sleeping, Alice can still activate the protocol that allows her to claim "),a("code",[e._v("<bobdeposit>")]),e._v(". In this scenario, she receives both the "),a("code",[e._v("<bobpayment>")]),e._v("\nand "),a("code",[e._v("<bobdeposit>")]),e._v(", at only the costs of the "),a("code",[e._v("<alicepayment>")]),e._v(" and "),a("code",[e._v("<dexfee>")]),e._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Bob can still make a later claim for the "),t("code",[this._v("<alicepayment>")]),this._v(" when he regains his awareness.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"_6-bob-spends-alicepayment"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-bob-spends-alicepayment","aria-hidden":"true"}},[this._v("#")]),this._v(" 6 - Bob Spends "),t("code",[this._v("<alicepayment>")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Assuming all has gone according to plan, and having spent the "),t("code",[this._v("<alicepayment>")]),this._v(",\nBob may now reclaim "),t("code",[this._v("<bobdeposit>")]),this._v(". Just as before, if Bob does not refund his own\ndeposit, it is his loss; in four hours Alice will be able to activate a claim on "),t("code",[this._v("<bobdeposit>")]),this._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h4",{attrs:{id:"_7-bob-reclaims-bobdeposit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-bob-reclaims-bobdeposit","aria-hidden":"true"}},[this._v("#")]),this._v(" 7 - Bob Reclaims "),t("code",[this._v("<bobdeposit>")])])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",[e._v("The process is complete. Alice received the "),a("code",[e._v("<bobpayment>")]),e._v(": Bob received the "),a("code",[e._v("<alicepayment>")]),e._v(": Bob has "),a("code",[e._v("<bobdeposit>")]),e._v(" back in his own possession. The entire process\nonly cost Alice the original "),a("code",[e._v("<dexfee>")]),e._v(". At each step along the way, the side that needs\nto take the next step is motivated to do so, with greater and greater urgency until the\nprocess is complete.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"additional-barterdex-atomic-swap-details"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#additional-barterdex-atomic-swap-details","aria-hidden":"true"}},[this._v("#")]),this._v(" Additional BarterDEX Atomic Swap Details")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Failed attempts at establishing a connection only result in the loss of a few seconds\nof the user’s time, and there is no cost associated with the failure. The "),t("code",[this._v("<dexfee>")]),this._v(" paid\nby an Alice never occurs, and BarterDEX disregards Bob’s attempt to send "),t("code",[this._v("<bobdeposit>")]),this._v(".")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"a-more-detailed-explanation-of-the-atomic-swap-connection-process"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-more-detailed-explanation-of-the-atomic-swap-connection-process","aria-hidden":"true"}},[this._v("#")]),this._v(" A More Detailed Explanation of the Atomic-Swap Connection Process")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",[e._v("For BarterDEX to accept a request to begin an atomic swap, the code first needs to\nregister and create all the necessary backend elements for the "),a("code",[e._v("<dexfee>")]),e._v(", "),a("code",[e._v("<alicepayment>")]),e._v(", "),a("code",[e._v("<bobdeposit>")]),e._v(", and "),a("code",[e._v("<bobpayment>")]),e._v(". All four must be specified before BarterDEX can indicate to Alice and Bob that it can successfully support this atomic swap.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v('Assuming Alice has already indicated she desires to perform an atomic swap, BarterDEX calculates out the proper divisions of her UTXOs, defines how they will be\nappropriated during the process, and sends an "Alice Request" to Bob with information regarding her pair of UTXOs (which are the '),t("code",[this._v("<dexfee>")]),this._v(" and the "),t("code",[this._v("<alicepayment>")]),this._v(").\nAlso, BarterDEX verifies her desired price and volume.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v('Bob, the human user (or an artificial-intelligence bot acting on his behalf), indicates\nthat he is willing to accept the trade. The automation of the BarterDEX Bob-side\nprotocol now takes over in the background. It validates the "Alice Request" to make\nsure the UTXO pair is valid, and then the Bob-side protocol scans through Bob’s\nUTXO inventory for the most efficient way to create both the '),t("code",[this._v("<bobpayment>")]),this._v(" and\n"),t("code",[this._v("<bobdeposit>")]),this._v(" UTXOs.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v('The Bob-side protocol understands that the UTXOs will not perfectly match, and\nit will therefore calculate the most efficient method of making any "spare change"\nUTXOs as needed. An additional constraint the protocol needs to consider is that the\nresult must match the price and volume Alice wants to pay. Finally, it accounts for the\nrequirement that '),t("code",[this._v("<bobdeposit>")]),this._v(' be at least 12.5"Alice Request." (Note that BarterDEX\nis directly involved with managing Bob’s UTXOs, but is not involved with managing\nAlice’s UTXO offers.)')])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"tip custom-block"},[t("p",{staticClass:"custom-block-title"},[this._v("Note")]),this._v(" "),t("p",[this._v('This 10-second timeout also provides a contribution to what we call "whale resistance" during the Komodo dICO process. Whale resistance is a way Komodo and BarterDEX resist "whales" from purchasing an entire coin supply and thus forcing an artificial market scarcity.')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("("),t("em",[this._v("This final negotiation could have been included earlier, but due to the way the atomic swap\norganically developed during our creation process, it ended up inside the atomic-swap protocol\nitself.")]),this._v(")")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"the-dex-fee-dexfee"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-dex-fee-dexfee","aria-hidden":"true"}},[this._v("#")]),this._v(" The DEX Fee: "),t("code",[this._v("<dexfee>")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("People will notice that there is a small "),t("code",[this._v("<dexfee>")]),this._v(" required as part of the BarterDEX\nprotocol. This is 1/777 of the transaction amount and it is calibrated to make spam\nattacks impractical. By forcing a would-be attacker to spend real money, attacking the\nnetwork becomes costly. Without this spam prevention, the BarterDEX could otherwise be attacked at the protocol level by any person performing a plethora of trade\nrequests.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The 1/777 fee ends up being equal to 0.1287% of the "),t("code",[this._v("<alicepayment>")]),this._v("; this is already\nfar less than the fees paid on an average centralized exchange. Also, centralized exchanges charge both sides of the trade, so even if they charge you 0.2%, they are\nactually harvesting 0.4% in total fees between both parties.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("It is possible that some atomic swaps can initiate, and then fail to complete, which\nraises questions about what happens to the "),t("code",[this._v("<dexfee>")]),this._v(". The "),t("code",[this._v("<dexfee>")]),this._v(" is the first charge\nin the protocol; in this sense, there is a "),t("code",[this._v("<dexfee>")]),this._v(" charged for these failed atomic swaps.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("However, this failure should not be looked upon in isolation. The BarterDEX pro-\ntocol is based on statistics. Statistically speaking, there will be some percentage of\natomic swaps that start and will not complete. Let us suppose a 15% failure rate at\nthis stage of the atomic swap (15% is three times higher than the rate of failure we\ncurrently observe in our testing). Even in this scenario, the effective "),t("code",[this._v("<dexfee>")]),this._v(" cost is\nstill only 0.15% to all Alice-side requests across the entire network.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Therefore, if you experience the loss of a "),t("code",[this._v("<dexfee>")]),this._v(" transaction for an atomic swap\nthat fails to complete (which would be due to a failure to receive a response from Bob),\nknow that this is all part of the statistical process. If you find yourself paying more\nthan 0.15% of your completed trades in "),t("code",[this._v("<dexfee>")]),this._v("’s, please let us know. This would\nbe a highly unusual statistical outlier, and we will therefore want to investigate.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("As an organization, when speaking generally to our audience online, we state that\nthe "),t("code",[this._v("<dexfee>")]),this._v(" is just 0.15%. In this manner, we hope to create the expectation that\n0.15% is normal; if the network performs perfectly, on the other hand, users will get\na blessing in the form of a lower fee, 0.1287%.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"dealing-with-confirmations"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dealing-with-confirmations","aria-hidden":"true"}},[this._v("#")]),this._v(" Dealing with Confirmations")])},function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("p",[e._v("BarterDEX achieves this protection by an array of "),a("code",[e._v("<setconfirms>")]),e._v(" API calls, which\ngives each side the option to specify how many confirmations they expect before the\nautomated process should be satisfied on behalf of the human users’ interests. The\nsetting for the "),a("code",[e._v("<setconfirms>")]),e._v(" feature must be decided before the atomic swap begins,\nas the number of confirmations the users choose will persist until the process completes. If the users have differing preferences for the total "),a("code",[e._v("<numconfirms>")]),e._v(" they prefer,\nthe BarterDEX protocol automatically sets the larger of the two preferences as the requirement for both parties. Furthermore, this feature also includes a "),a("code",[e._v("<maxconfirms>")]),e._v("\nvalue to prevent one side from specifying an unreasonable or malicious number of\nrequired confirmations.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"zero-confirmations"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zero-confirmations","aria-hidden":"true"}},[this._v("#")]),this._v(" Zero Confirmations")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("BarterDEX also supports a high-speed trading mode. Using this feature, a user\ncan activate an extremely fast mode of trading: "),t("code",[this._v("<zeroconf>")]),this._v(". This initiates a form of\natomic-swap trading that does not wait for any confirmations at all. When using this\nfeature, atomic swaps can be completed in as little as three seconds. This is a high-risk\nendeavor, naturally, and users should exercise extreme caution when implementing\nit.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("One potential application for the "),t("code",[this._v("<zeroconf>")]),this._v(" feature is to allow groups of individuals to form their own organizations where they decide personal trust levels, and work\ntogether to correct any mistakes that are made in their accounting endeavors.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("BarterDEX also features a special Trust API that users can enable for themselves\nand groups that they form to indicate how much they trust different traders. By\ndefault, the Trust API is set to neutral for all users. A group of users can form their\nown organization and develop a trusted network for trading, using the Trust API to\nset each other’s trader profile to Trust = Positive. In such cases, if a user, or a group of\nusers, tells the Trust API to set another trader profile to Trust = Negative, that trader’s\n"),t("code",[this._v("<pubkey>")]),this._v(" is blacklisted for any of the participating individuals or groups.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"speed-mode-an-experimental-feature-using-time-locked-deposits"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#speed-mode-an-experimental-feature-using-time-locked-deposits","aria-hidden":"true"}},[this._v("#")]),this._v(" Speed Mode: An Experimental Feature Using Time-Locked Deposits")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Using the "),t("code",[this._v("<zeroconf>")]),this._v(' protocol, we developed a new feature for the BarterDEX\nnetwork that is functional, but still experimental. It is called "Speed Mode," and it\nadds one additional step to the Alice and Bob process.')])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("With the security deposit in place, Alice can use the Speed Mode feature to complete a trade in as little as three to five seconds. Note that this feature is new, highly\nexperimental, and we recommend users exercise extreme caution when participat-\ning. If a user cannot activate Speed Mode, BarterDEX defaults to the normal, non-"),t("code",[this._v("<zeroconf>")]),this._v(" atomic-swap trading method.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"realtime-metrics"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#realtime-metrics","aria-hidden":"true"}},[this._v("#")]),this._v(" Realtime Metrics")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Nodes on BarterDEX use Realtime metrics (RTmetrics) to filter the possible candidates for atomic-swap matching. All nodes track global stats via a "),t("code",[this._v("<stats.log>")]),this._v(" file.\nThis log file allows each node to self-update the list of pending swaps on the network.\nBy nature, the BarterDEX protocol has filters that give less priority to nodes that are\nalready occupied. Additionally, the Alice-side protocol gives less preference to Bob-side protocols that do not have enough UTXO sizes visible in the orderbook. This is\na new feature, and we expect to optimize and enhance it in future iterations.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"orderbook-propagation"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#orderbook-propagation","aria-hidden":"true"}},[this._v("#")]),this._v(" Orderbook Propagation")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("To construct a public orderbook, a node needs to have price information. Since BarterDEX communicates primarily by means of pubkeys, the price for each currency\nmust naturally be obtained from a pubkey. In the long run, for orderbook performance, we will need a specific "),t("code",[this._v("<txid>/<vout>")]),this._v(" for each node, as each individual node\ncould have hundreds of UTXOs. Currently, propagating all this information globally\nwould use an excessive amount of bandwidth, so we therefore use a different solution.\nBarterDEX instead uses a hierarchical orderbook, where the skeleton of the orderbook\nis simply the (pubkey)/(price) for any (base)/(relevant) pair.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("div",{staticClass:"tip custom-block"},[t("p",{staticClass:"custom-block-title"},[this._v("Note")]),this._v(" "),t("p",[this._v("This means that purchasing a cryptocurrency at the (base)/(relevant) price is directly comparable to selling the cryptocurrency using (relevant)/(base) at a ratio of 1/(price).")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("h2",{attrs:{id:"the-barterdex-api"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#the-barterdex-api","aria-hidden":"true"}},[this._v("#")]),this._v(" The BarterDEX API")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("There are several feature requirements in the core code of the blockchain coin,\nand if these features are not included in the core there may be some limitations.\nFor example, a coin that is not built on the Bitcoin-protocol Check Lock-Time Verify\n(CLTV) feature can still take advantage of the liquidity-taker side of the BarterDEX\nAPI. For a coin to work in native mode, it must also have a "),t("code",[this._v("<gettxout>")]),this._v(" RPC call.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("h3",{attrs:{id:"a-brief-discussion-on-the-future-of-barterdex"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#a-brief-discussion-on-the-future-of-barterdex","aria-hidden":"true"}},[this._v("#")]),this._v(" A Brief Discussion on the Future of BarterDEX")])}],!1,null,null,null);t.default=i.exports}}]);